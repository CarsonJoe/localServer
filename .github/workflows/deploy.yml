name: Deploy to Local Server       # Name shown in GitHub Actions tab

on:
  push:
    branches: [ main ]              # Trigger when pushing to main branch

jobs:
  deploy:
    runs-on: self-hosted            # Run on YOUR server, not GitHub's
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4     # Download your code to the server
    
    - name: Setup Node.js
      uses: actions/setup-node@v4   # Make sure Node.js is available
      with:
        node-version: '18'
        cache: 'npm'                # Speed up by caching npm packages
        cache-dependency-path: backend/package-lock.json
    
    - name: Deploy application
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}  # Get API key from GitHub secrets
      run: |
        chmod +x ./scripts/deploy.sh   # Make script executable
        ./scripts/deploy.sh            # RUN THE DEPLOYMENT SCRIPT!
    
    - name: Wait for service to start
      run: sleep 15                 # Give the app time to start
    
    - name: Health check
      run: |
        curl -f http://localhost:3001/api/sources || (  # Test if app is working
          echo "‚ùå Health check failed"
          sudo systemctl status research-repo           # Show error info
          sudo journalctl -u research-repo --no-pager -n 20
          exit 1                    # Fail the deployment if app isn't working
        )
    
    - name: Deployment success
      run: |
        echo "üéâ Deployment successful!"
        echo "üåê Frontend: http://$(hostname -I | awk '{print $1}')"
        echo "üîå Backend: http://$(hostname -I | awk '{print $1}'):3001"